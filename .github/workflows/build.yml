name: build

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

  pull_request:

jobs:
  build-thirdparty:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.0.8

    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.20.x'

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build
        run: |
          ./pack_other.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: libother-*.tar.gz

  build-llvm:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.0.8
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.20.x'

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build llvm
        run: |
          ./pack_llvm.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: llvm-*.tar.gz

  build-boost:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aceforeverd/hybridsql-base:0.0.8
    steps:
      - uses: actions/checkout@v2

      - name: Cache Source
        id: cache-source
        uses: actions/cache@v2
        with:
          path: |
            src/*.tar.*
            src/*.zip
          key: ${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', 'fetch_resource.sh') }}

      - name: download
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          ./fetch_resource.sh

      - name: build boost
        run: |
          ./pack_boost.sh

      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          path: boost-*.tar.gz

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ['build-thirdparty', 'build-llvm', 'build-boost']
    steps:
      - uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Determine Version
        working-directory: artifact
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=$(echo $VERSION | sed -e 's/^v//')

      - name: Pack All
        run: |
          ./pack_all.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifact/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
