name: build

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

  pull_request:

env:
  OPENMLDB_REPO: aceforeverd/fedb
  OPENMLDB_REF: build/618-compile-thirdparty

jobs:
  thirdparty-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - container: ghcr.io/aceforeverd/hybridsql-base:0.4.0
            flags: ''
          - container: ubuntu:20.04
            flags: -DBUILD_ZOOKEEPER_PATCH=ON

    container:
      image: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v2

      - name: setup deps
        if: startsWith(matrix.container, 'ubuntu')
        run: |
          apt update
          DEBIAN_FRONTEND=noninteractive apt-get install -y bison python3-dev libcppunit-dev build-essential cmake autoconf tcl pkg-config git
      - name: setup bazel
        run: |
          curl --create-dirs -SLo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-linux-amd64
          chmod +x /usr/local/bin/bazel

      - name: download thirdparty source
        uses: actions/checkout@v2
        with:
          repository: ${{ env.OPENMLDB_REPO }}
          ref: ${{ env.OPENMLDB_REF }}
          path: openmldb

      - name: configure
        run: |
          cmake -S openmldb/third-party -B deps -DBUILD_BUNDLED=ON ${{ env.flags }}

      - name: build
        run: |
          cmake --build deps

      - name: create archive
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          ./pack_all.sh

      # TODO: release action

  thirdparty-darwin:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.20.x'

      - name: download thirdparty source
        uses: actions/checkout@v2
        with:
          repository: ${{ env.OPENMLDB_REPO }}
          ref: ${{ env.OPENMLDB_REF }}
          path: openmldb

      - name: Install System Dependencies
      # coreutils for nproc
      # gnu-getopt for brpc
        run: |
          brew install automake coreutils gnu-getopt bazelisk

      - name: configure
        run: |
          cmake -S openmldb/third-party -B deps -DBUILD_BUNDLED=ON ${{ env.flags }}

      - name: build
        run: |
          cmake --build deps

      - name: create archive
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          ./pack_all.sh

      # TODO: release action
